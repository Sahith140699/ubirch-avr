# Load Arduino sketches

if(DEFINED ARDUINO_SDK_PATH AND IS_DIRECTORY ${ARDUINO_SDK_PATH})
    # set the paths
    set(ARDUINO_CORES_PATH ${ARDUINO_SDK_PATH}/hardware/arduino/avr/cores/arduino)
    set(ARDUINO_VARIANTS_PATH ${ARDUINO_SDK_PATH}/hardware/arduino/avr/variants/standard)
    set(ARDUINO_LIBRARIES_PATH ${ARDUINO_SDK_PATH}/hardware/arduino/avr/libraries)

    # configure the core library
    file(GLOB_RECURSE ARDUINO_CORES_SRCS ${ARDUINO_CORES_PATH}/*.S ${ARDUINO_CORES_PATH}/*.c ${ARDUINO_CORES_PATH}/*.cpp)
    add_library(arduino-core ${ARDUINO_CORES_SRCS})
    target_include_directories(arduino-core PUBLIC ${ARDUINO_CORES_PATH})
    target_include_directories(arduino-core PUBLIC ${ARDUINO_VARIANTS_PATH})

    # configure all the additional libraries in the core
    file(GLOB CORE_DIRS ${ARDUINO_LIBRARIES_PATH}/*)
    set(LIBS)
    foreach(libdir ${CORE_DIRS})
        get_filename_component(libname ${libdir} NAME)
        if(IS_DIRECTORY ${libdir})
            file(GLOB_RECURSE sources ${libdir}/*.cpp ${libdir}/*.S ${libdir}/*.c )
            string(REGEX REPLACE "examples/.*" "" sources "${sources}")
            if(sources)
                message("FOUND ARDUINO CORE LIB: ${libname}")
                add_library(${libname} ${sources})
                target_link_libraries(${libname} arduino-core)
                foreach(src ${sources})
                    get_filename_component(dir ${src} PATH)
                    target_include_directories(${libname} PUBLIC ${dir})
                endforeach()
                list(APPEND LIBS ${libname})
            else()
                message("FOUND ARDUINO CORE INC: ${libname}")
                include_directories(SYSTEM ${libdir})
            endif()
        endif()
    endforeach()

    # configure libraries from other providers found in the libraries dir
    file(GLOB EXT_DIRS "libraries/*")
    foreach(libdir ${EXT_DIRS})
        get_filename_component(libname ${libdir} NAME)
        if(IS_DIRECTORY ${libdir})
            file(GLOB_RECURSE sources ${libdir}/*.asm ${libdir}/*.c ${libdir}/*.cpp )
            string(REGEX REPLACE "examples/.*" "" sources "${sources}")
            if(sources)
                message("FOUND ARDUINO LIB: ${libname}")
                add_library(${libname} ${sources})
                target_link_libraries(${libname} ${LIBS})
                foreach(src ${sources})
                    get_filename_component(dir ${src} PATH)
                    target_include_directories(${libname} PUBLIC ${dir})
                endforeach()
            else()
                message("FOUND ARDUINO INCLUDE: ${libname}")
                include_directories(SYSTEM ${libdir})
            endif()
            list(APPEND LIBS ${libname})
        endif()
    endforeach()

    file(GLOB SRC_DIRS "*/CMakeLists.txt")
    foreach(cmakedir ${SRC_DIRS})
        get_filename_component(subdir ${cmakedir} PATH)
        if(IS_DIRECTORY ${subdir})
            get_filename_component(target ${subdir} NAME)
            message("FOUND ARDUINO SKETCH: ${target}")
            add_subdirectory(${subdir})
        endif()
    endforeach()

else()
    message(WARNING "No Arduino SDK found at '${ARDUINO_SDK_PATH}', can't compile sketches!")
endif()